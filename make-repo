#!/bin/bash

MAKE_REPO_PATH=`readlink /usr/local/bin/make-repo`
if [ $# != 127 ]
  then
  . "${MAKE_REPO_PATH%make-repo}"shflags.sh
else
  echo "shflags not found. check your make_repo directory and make sure it's in there."
  exit 1
fi

DEFINE_boolean 'private' false 'Set the repo to private on creation - only works if you have private repo rights' 'p'
DEFINE_string 'repo_name' '' 'Set the name for the repo to be created on github (Required)' 'n'
DEFINE_boolean 'remote_link' false 'Link the created remote repo to the repo in the current working directory' 'r'
DEFINE_string 'github_user' '' 'Your github username (Required)' 'u'

die()
{
  [ $# -gt 0 ] && echo "error: $@" >&2
  flags_help
  exit 1
}

FLAGS "$@" || exit 1
eval set -- "${FLAGS_ARGV}"

if [ "${FLAGS_private}" == 0 ]
  then
  private=true
  else
  private=false
fi

if [ "${FLAGS_github_user}" == '' ]
  then
  echo 'Required Field missing: Github Username (USAGE: make-repo -n "repo-name" -u "github-username" -[pr])'
  exit 1
  else
  if [ "${FLAGS_repo_name}" == '' ]
    then
      echo 'Required Field missing: Repo Name (USAGE: make-repo -n "repo-name" -u "github-username" -[pr])'
      exit 1
    else
      repo_name="${FLAGS_repo_name}"
      github_user="${FLAGS_github_user}"
  fi
fi

CURL_COMMAND="curl -s -N -H \"X-content-type: application/json\" -u ${github_user} \
    -X POST --data-binary \"{\\\"name\\\": \\\"${repo_name}\\\", \\\"private\\\": \\\"${private}\\\"}\" \"https://api.github.com/user/repos\""

RESPONSE=`eval "$CURL_COMMAND" | \
    python -c "import sys, json; print json.load(sys.stdin)['html_url']"`

echo "Repo created at: ${RESPONSE}"

if [ "${FLAGS_remote_link}" == 0 ]
  then
    REMOTE_ADD="git remote add origin \"${RESPONSE}\""
    eval "$REMOTE_ADD"
    echo "Remote added, use git push -u origin master to push your local repo to github"
  else
    exit 0
fi
